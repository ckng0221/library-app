FROM node:alpine AS base

FROM base AS builder
ARG service

# Set working directory
WORKDIR /app
RUN npm i -g turbo
COPY . .
# Use turbo output, to copy all related workspace together
RUN turbo prune ${service} --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS development
ARG service

WORKDIR /app

# First install the dependencies (as they change less often)
COPY --from=builder /app/out/json/ .
RUN npm install

# Build the project
COPY --from=builder /app/out/full/ .
RUN npm run build:${service}

FROM base as production

ARG service
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

WORKDIR /usr/src/app

COPY package*.json ./
COPY apps/${service}/package*.json ./apps/${service}/

RUN npm install --omit=dev --workspace=${service}
# RUN echo ${service}

# COPY . .

COPY --from=development /app/dist/apps/${service} ./dist

CMD ["node", "dist/server.js"]

# docker build --build-arg="service=apigateway" -f ./apps/Dockerfile.apigateway . -t libraryapp-apigateway
# docker run -p 8080:8080 libraryapp/apigateway
