# NOTE: The ports of internal services (eg. book, customer, payment, borrowing) are not exposed in production

services:
  # app services
  book:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.service
      target: production
      args:
        service: book
    env_file:
      - ./apps/book/.env
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/libraryapp-book
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    # ports:
    #   - '8001:8001'
    networks:
      - node-network
    links:
      - mongodb
      - rabbitmq
  customer:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.service
      target: production
      args:
        service: customer
    env_file:
      - ./apps/customer/.env
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/libraryapp-customer
    depends_on:
      - mongodb
    # ports:
    #   - '8002:8002'
    networks:
      - node-network
    links:
      - mongodb
  borrowing:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.service
      target: production
      args:
        service: borrowing
    env_file:
      - ./apps/borrowing/.env
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/libraryapp-borrowing
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    # ports:
    #   - '8003:8003'
    networks:
      - node-network
    links:
      - mongodb
      - rabbitmq
  payment:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.service
      target: production
      args:
        service: payment
    env_file:
      - ./apps/payment/.env
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/libraryapp-payment
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    # ports:
    #   - '8004:8004'
    networks:
      - node-network
    links:
      - mongodb
      - rabbitmq
  notification:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.service
      target: production
      args:
        service: notification
    env_file:
      - ./apps/notification/.env
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
    # ports:
    #   - '8005:8005'
    networks:
      - node-network
    links:
      - rabbitmq
  view:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.view
      args:
        service: view
    env_file:
      - ./apps/view/.env
    depends_on:
      - book
      - customer
      - borrowing
      - payment
      - notification
    ports:
      - '8000:8000'
    networks:
      - node-network
  apigateway:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.apigateway
      target: production
      args:
        service: apigateway
    env_file:
      - ./apps/apigateway/.env
    depends_on:
      - view
    ports:
      - '8080:8080'
    networks:
      - node-network
    links:
      - book
      - customer
      - borrowing
      - payment
    environment:
      - BASEURL_BOOK=http://book:8001
      - BASEURL_CUSTOMER=http://customer:8002
      - BASEURL_BORROWING=http://borrowing:8003
      - BASEURL_PAYMENT=http://payment:8004

  # Dependencies
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    networks:
      - node-network
  mongodb:
    image: mongo:6
    volumes:
      - mongodb_data_container:/data/db
    ports:
      - '27017:27017'
    networks:
      - node-network

volumes:
  mongodb_data_container:
networks:
  node-network:
    driver: bridge
# docker compose -f docker-compose.prod.yml up -d
# docker compose -f docker-compose.prod.yml up -d --build
# docker compose -f docker-compose.prod.yml down
